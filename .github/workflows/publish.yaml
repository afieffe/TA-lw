on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Create build dir
        run: mkdir -p ta-lw-package/
      - name: Update Version Number
        run: |
          old_str="X.Y.Z"
          new_str=$(echo "${GITHUB_REF#refs/*/}" | tr -d "v")
          sed -i "s/$old_str/$new_str/g" ./default/app.conf
          sed -i "s/$old_str/$new_str/g" app.manifest
          cat ./default/app.conf
      - name: Extraction version
        run: echo ${{ github.ref }} | sed -e 's/^v//'
      - name: Compress archive
        run : |
          new_str=$(echo "${GITHUB_REF#refs/*/}" | tr -d "v")
          echo "SPL_FILE=ta-lw-package/TA-lw-$new_str.spl" >> $GITHUB_ENV
          tar --exclude "ta-lw-package" --exclude "README.md" -czvf ta-lw-package/TA-lw-$new_str.spl * --transform='s,^,TA-lw/,'
          ls -al ta-lw-package/
      - uses: splunk/appinspect-api-action@v3.0
        with:
          username: ${{ secrets.SPL_COM_USER }}
          password: ${{ secrets.SPL_COM_PASSWORD }}
          app_path: ta-lw-package/
      - name: Initialize Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
      - name: Create Release
        uses: csexton/release-asset-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{env.SPL_FILE}}
          release-url: ${{ steps.create_release.outputs.upload_url }}
